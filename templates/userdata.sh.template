#!/usr/bin/env bash
VERSION="1.0.0"
PROGRAM="bsc-node-deploy"

# Header logging
e_header() {
    printf "$(tput setaf 38)→ %s$(tput sgr0)\n" "$@"
}

# Success logging
e_success() {
    printf "$(tput setaf 76)✔ %s$(tput sgr0)\n" "$@"
}

# Error logging
e_error() {
    printf "$(tput setaf 1)✖ %s$(tput sgr0)\n" "$@"
}

# Warning logging
e_warning() {
    printf "$(tput setaf 3)! %s$(tput sgr0)\n" "$@"
}


# My Script Start
myscript_start() {

    # Script Start
    echo "bsc-node-deploy Automated Installation"
    echo "Maintained by Inceptus via Ewok"
    echo "If installation fails, please check logfile in /var/log/bsc-node-deploy.log"
    echo "Please wait while installation and configuration begins"
    echo "Initializing Script..."

# Global Variables
    LOGFILE="/var/log/bsc-node-deploy.log"
    echoerror() {
        printf "${RC} * ERROR${EC}: $@\n" 1>&2;
    }


# Install Dependencies

echo "[bsc-node-deploy] Installing Dependencies for bsc-node-deploy..."
sudo apt-get update && sudo apt-get upgrade -y >> $LOGFILE 2>&1

apt install -y awscli $LOGFILE 2>&1
apt install -y jq $LOGFILE 2>&1# JSON parser for sh/bash
apt install -y git $LOGFILE 2>&1
apt install -y golang $LOGFILE 2>&1
apt install -y unzip $LOGFILE 2>&1
apt install -y make $LOGFILE 2>&1

## Setup Volume
DEVICE=${ebs_device_name}
FS_TYPE=$(file -s $DEVICE | awk '{print $2}')
MOUNT_POINT=/bsc_geth_node
# If no FS, then this output contains "data"
if [ "$FS_TYPE" = "data" ]
then
    echo "Creating file system on $DEVICE"
    mkfs -t xfs $DEVICE
fi
mkdir $MOUNT_POINT
echo "$DEVICE  $MOUNT_POINT  xfs  defaults,nofail  0  2" >> /etc/fstab
mount $MOUNT_POINT

### Grab API Keys from SSM
export AWS_DEFAULT_REGION=${region} $LOGFILE 2>&1 ## REMOVE to detemplatize


## Install Sumo Collector
mkdir /sumologic
cd /sumologic
wget "https://collectors.sumologic.com/rest/download/linux/64" -O SumoCollector.sh && chmod +x SumoCollector.sh $LOGFILE 2>&1
chmod +x SumoCollector.sh $LOGFILE 2>&1
./SumoCollector.sh -q -Vsumo.accessid=<accessId> -Vsumo.accesskey=<accessKey> -VsyncSources=/node/bsc.log -Vcollector.name=bsc-archive-node $LOGFILE 2>&1

## Geth Deploy
cd /bsc_geth_node
git clone https://github.com/binance-chain/bsc $LOGFILE 2>&1
cd bsc $LOGFILE 2>&1
make geth $LOGFILE 2>&1

## Geth Configuration Files
wget   $(curl -s https://api.github.com/repos/binance-chain/bsc/releases/latest |grep browser_ |grep mainnet |cut -d\" -f4) $LOGFILE 2>&1
unzip mainnet.zip $LOGFILE 2>&1

## Write Local Genesis State
geth --datadir node init genesis.json $LOGFILE 2>&1

# Restart GETH Node service on reboot
touch startgeth.sh $LOGFILE 2>&1
cat >> startgeth.sh <<EOL $LOGFILE 2>&1
geth --config ./config.toml --datadir ./node --pprofaddr 0.0.0.0 --metrics --pprof --rpc --rpccorsdomain '*' --rpcapi shh,eth,net,web3
geth --http.corsdomain '*'
EOL
geth --config config.toml 2> geth.log $LOGFILE 2>&1
sudo touch /lib/systemd/system/geth.service $LOGFILE 2>&1
cat >> /lib/systemd/system/geth.service <<EOL $LOGFILE 2>&1
[Unit]
Description=Ethereum go client
[Service]
User=root
Type=simple
WorkingDirectory=$MOUNT_POINT
ExecStart=/bin/bash $MOUNT_POINT/startgeth.sh
Restart=on-failure
RestartSec=5
[Install]
WantedBy=default.target
EOL

# ------------------------------------------------------------------------------
# | INITIALIZE PROGRAM                                                         |
# ------------------------------------------------------------------------------

main() {
        myscript_start
}

# Initialize
main $*
